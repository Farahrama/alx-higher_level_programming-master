>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> geo = BaseGeometry()
>>> geo.integer_validator("int", 18)

>>> geo.integer_validator("age", -4)
Traceback (most recent call last):
   ...
ValueError: age must be greater than 0

>>> geo.integer_validator("age", 13.5)
Traceback (most recent call last):
   ...
TypeError: age must be an integer
>>> geo.integer_validator("name", "John")
Traceback (most recent call last):
   ...
TypeError: name must be an integer

>>> geo.integer_validator("age")
Traceback (most recent call last):
   ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> geo.integer_validator("age", "4")
Traceback (most recent call last):
   ...
TypeError: age must be an integer

>>> geo.integer_validator("age", (4,))
Traceback (most recent call last):
   ...
TypeError: age must be an integer

>>> geo.integer_validator("age", [3])
Traceback (most recent call last):
   ...
TypeError: age must be an integer

>>> geo.integer_validator("age", True)
Traceback (most recent call last):
   ...
TypeError: age must be an integer

>>> geo.integer_validator("age", {3, 4})
Traceback (most recent call last):
   ...
TypeError: age must be an integer

>>> geo.integer_validator("age", None)
Traceback (most recent call last):
   ...
TypeError: age must be an integer

>>> geo.integer_validator("age", 0)
Traceback (most recent call last):
   ...
ValueError: age must be greater than 0

>>> geo.area()
Traceback (most recent call last):
   ...
Exception: area() is not implemented